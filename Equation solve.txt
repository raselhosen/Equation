import java.util.Scanner;

public class NewClass1
{	

	private static Scanner scanner = new Scanner(System.in);;
	

	static String variables = "";
	static double[] values = new double[100];
	static String[] equations = new String[100];
	static double[] answer = new double[100];
	
	
	static int Operator_Precedence(char operator)
	{
		int precedence = 0;
		
		if (operator == '+' || operator == '-')
		{
			precedence = 5;
		}
		else if (operator == '*' || operator == '/')
		{
			precedence = 6;
		}
		
		return precedence;
	}
	
	
	static String infixToPostfix(String infix)
	{
		
		String stack = "", postfix = "";
		int i = 0, top = -1;
		
		
		for (i = 0; i < infix.length(); i++)
		{
			//System.out.println(infix.charAt(i));
			
			if(infix.charAt(i) >= 'A' && infix.charAt(i) <= 'Z' || infix.charAt(i) >= 'a' && infix.charAt(i) <= 'z')
			{
				postfix = postfix+infix.charAt(i);
			}
			else if(infix.charAt(i) == ' ')
				continue;
			else
			{
				
				if (top == -1 || Operator_Precedence(infix.charAt(i)) > Operator_Precedence(stack.charAt(top)))
				{
					//push
					top++;
				//	stack.replace(infix.charAt(top), infix.charAt(i));
					
				//	stack = stack+infix.charAt(i);
					
					stack = new StringBuilder(stack).insert(top, infix.charAt(i)).toString(); // This Line is to insert a character in a specific position
				}
				else
				{
					//pop
		 			postfix = postfix+stack.charAt(top);
					top--;
					i--;
				}
			}
			
		}
		
		for (; top > -1; top--)
		{
			postfix = postfix+stack.charAt(top);
		}
		
		return postfix;
		
	}
	
	
	
	
	//----------Calculation Part----------------
	
	public static double Calculate(double num1, char operator, double num2)
	{
		double ans = 0;
		
		switch (operator)
		{
		case '+':
			ans = num1+num2;
			break;
		case '-':
			ans = num1-num2;
			break;
		case '*':
			ans = num1*num2;
			break;
		case '/':
			ans = num1/num2;
			break;
		default:
			break;
		}
		
		return ans;
	}
	
	public static double gettingValue(char variable)
	{
		double value = 0;
		for (int i = 0; i < variables.length(); i++)
		{
			if (variables.charAt(i) == variable)
			{
				return values[i];
			}
		}
		
		return value;

	}
	
	public static double SimplifyEquation(String simplify)
	{
		String postfixSimPlify = infixToPostfix(simplify);
		double ans = 0;
		double[] stack = new double[100];
		int top = -1;
		
		//Main Calculation Code
		
		for (int i = 0; i < postfixSimPlify.length(); i++)
		{
			if(postfixSimPlify.charAt(i) >= 'A' && postfixSimPlify.charAt(i) <= 'Z' || postfixSimPlify.charAt(i) >= 'a' && postfixSimPlify.charAt(i) <= 'z')
			{
				stack[++top] = gettingValue(postfixSimPlify.charAt(i));
			}
			else if(postfixSimPlify.charAt(i) == ' ')
				continue;
			else
			{
				stack[top-1] = Calculate(stack[top-1], postfixSimPlify.charAt(i), stack[top]);
				top--;
			}
		}
		
		if (top == 0)
		{
			ans = stack[top];
		}
		
		
		return ans;
	}

	public static void main(String[] args)
	{
		System.out.print("Enter number of variables:  ");
		int Variables = scanner.nextInt();
		
		int i;
		
		
		System.out.println("Enter Variable Names(Single Letter):");
		for (i = 0; i <= Variables; i++)
		{
			variables = variables + scanner.nextLine();
		}
		
		System.out.println("Enter Variable Values:");
		for (i = 0; i < Variables; i++)
		{
			System.out.print(variables.charAt(i)+" = ");
			values[i] = scanner.nextDouble();
		}
		
		
		System.out.print("Number Of Equations:  ");
		int NumberOfEquation = scanner.nextInt();
		
		
		System.out.println("Enter Equations:");
		for (i = 0; i <= NumberOfEquation; i++)
		{
			if(i!=0)
				System.out.print((i)+". ");
			equations[i] = scanner.nextLine();
		}
		
		
		
		for (i = 1; i <= NumberOfEquation; i++) {
			answer[i] = SimplifyEquation(equations[i]);
		}
		
		System.out.println("\n\n\n");
		for (i = 1; i <= NumberOfEquation; i++) {
			System.out.println("Answer Of Equation "+(i)+" = "+answer[i]);
		}
	}


}